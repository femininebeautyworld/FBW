<?xml version="1.0" encoding="UTF-8"?>

<!DOCTYPE hibernate-mapping PUBLIC 
"-//Hibernate/Hibernate Mapping DTD 3.0//EN"
"http://hibernate.sourceforge.net/hibernate-mapping-3.0.dtd">

<hibernate-mapping>
	<class name="main.java.com.beauty.domain.Posts" table="FBM_POSTS">
		<meta attribute="class-description">
			This class contains the Posts details.
		</meta>
		<id name="postId" type="java.lang.Long" column="POST_ID">
			<generator class="sequence">
				<param name="sequence">FBM_POSTS_SEQ</param>
			</generator>
		</id>
		<property name="postTitle" type="java.lang.String" column="POST_TITLE" />
		<property name="postType" type="java.lang.String" column="POST_TYPE" />
		<property name="postViewType" type="java.lang.String" column="POST_VIEW_TYPE" />
		<property name="postDescription" type="java.lang.String"
			column="POST_DESCRIPTION" />
		<property name="dateCreated" type="java.util.Date" column="DATE_CREATED" />
		<property name="datePublished" type="java.util.Date" column="DATE_PUBLISHED" />

		<set name="postPictureContents" table="FBM_POST_PICTURE_CONTENT"
			inverse="true" lazy="false" cascade="all" fetch="select">
			<key>
				<column name="POST_ID" not-null="true" />
			</key>
			<one-to-many class="main.java.com.beauty.domain.PostPictureContent" />
		</set>
		<set name="postVideoContents" table="FBM_POST_VIDEO_CONTENT"
			inverse="true" lazy="false" cascade="all" fetch="select">
			<key>
				<column name="POST_ID" not-null="true" />
			</key>
			<one-to-many class="main.java.com.beauty.domain.PostVideoContent" />
		</set>
	</class>

	<sql-query name="main.java.com.beauty.domain.getPostsToViewForAdmin">
		<return alias="post" class="main.java.com.beauty.domain.Posts" />
        <![CDATA[select * from fbm_posts post]]>
	</sql-query>

	<sql-query name="main.java.com.beauty.domain.getPostById">
		<return alias="post" class="main.java.com.beauty.domain.Posts" />
        <![CDATA[select * from fbm_posts post where post_id = :postId]]>
	</sql-query>

	<sql-query name="main.java.com.beauty.domain.getPostsByPostType">
        <![CDATA[ 
        SELECT result.*
FROM
  (SELECT p.POST_ID    AS postId,
    p.POST_TITLE       AS postTitle,
    p.POST_TYPE        AS postType,
    p.POST_DESCRIPTION AS postDescription,
    vpc.POST_PICTURE   AS postPictureUrl,
    NULL               AS postVidUrl,
    NULL               AS postVideoDesc
  FROM fbm_posts p,
    (SELECT *
    FROM
      (SELECT pc.*,
        RANK() OVER (PARTITION BY post_id ORDER BY post_pic_id ASC) RANK
      FROM fbm_post_picture_content pc
      )
    WHERE RANK = 1
    ) vpc
  WHERE p.post_id  = vpc.post_id
  AND p.post_type IN NVL(:postType, p.post_type)
  UNION
  SELECT p.POST_ID       AS postId,
    p.POST_TITLE         AS postTitle,
    p.POST_TYPE          AS postType,
    p.POST_DESCRIPTION   AS postDescription,
    NULL                 AS postPictureUrl,
    vpvc.POST_VIDEO_URL  AS postVidUrl,
    vpvc.POST_VIDEO_DESC AS postVideoDesc
  FROM fbm_posts p,
    fbm_post_video_content vpvc
  WHERE p.post_id  = vpvc.post_id
  AND p.post_type IN NVL(:postType, p.post_type)
  )result
        
        ]]>
	</sql-query>

</hibernate-mapping>